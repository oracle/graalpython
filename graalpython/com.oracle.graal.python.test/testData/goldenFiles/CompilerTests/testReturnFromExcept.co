Disassembly of <module>:
  1:0   -   5:43        0 MAKE_FUNCTION                     0    (foo)
  1:0   -   5:43        3 STORE_NAME                        0    (foo)
  1:0   -   5:43        5 LOAD_NONE
  1:0   -   5:43        6 RETURN_VALUE

Disassembly of foo:
  2:11  -   2:16        0 LOAD_GLOBAL                       0    (range)
  2:17  -   2:19        2 LOAD_BYTE                         10
  2:11  -   2:20        4 CALL_FUNCTION                     1
  2:2   -   5:43        6 GET_ITER
  2:2   -   5:43  >>    7 FOR_ITER                          53   (to 60)
  2:6   -   2:7         9 STORE_FAST                        0    (i)                               generalizes: 7
  3:4   -   5:43       11 NOP
  4:6   -   4:7        12 LOAD_BYTE                         1
  4:10  -   4:11       14 LOAD_BYTE                         0
  4:6   -   4:11       16 BINARY_OP                         8    (TRUEDIV)                         generalizes: 14, 12
  4:6   -   4:11       18 POP_TOP
  4:6   -   4:11       19 JUMP_FORWARD                      39   (to 58)
  4:6   -   4:11       21 PUSH_EXC_INFO                                                           (exc handler 12 - 21; stack: 1)
  5:11  -   5:23       22 LOAD_GLOBAL                       1    (RuntimeError)
  5:4   -   5:43       24 MATCH_EXC_OR_JUMP                 33   (to 57)
  5:4   -   5:43       28 UNWRAP_EXC
  5:4   -   5:43       29 STORE_FAST                        1    (e)
  5:42  -   5:43       31 LOAD_GLOBAL                       2    (a)
  5:35  -   5:43       33 LOAD_NONE
  5:35  -   5:43       34 STORE_FAST                        1    (e)
  5:35  -   5:43       36 DELETE_FAST                       1    (e)
  5:35  -   5:43       38 ROT_TWO
  5:35  -   5:43       39 POP_EXCEPT
  5:35  -   5:43       40 ROT_TWO
  5:35  -   5:43       41 POP_TOP
  5:35  -   5:43       42 RETURN_VALUE
  5:35  -   5:43       43 LOAD_NONE
  5:35  -   5:43       44 STORE_FAST                        1    (e)
  5:35  -   5:43       46 DELETE_FAST                       1    (e)
  5:35  -   5:43       48 POP_EXCEPT
  5:35  -   5:43       49 JUMP_FORWARD                      9    (to 58)
  5:35  -   5:43       51 LOAD_NONE                                                               (exc handler 31 - 43; stack: 2)
  5:35  -   5:43       52 STORE_FAST                        1    (e)
  5:35  -   5:43       54 DELETE_FAST                       1    (e)
  5:35  -   5:43       56 END_EXC_HANDLER
  5:35  -   5:43  >>   57 END_EXC_HANDLER                                                         (exc handler 22 - 31; stack: 2 | exc handler 43 - 57; stack: 2)
  5:35  -   5:43  >>   58 JUMP_BACKWARD                     51   (to 7)
  5:35  -   5:43  >>   60 LOAD_NONE
  5:35  -   5:43       61 RETURN_VALUE
