Disassembly of <module>:
  1:0   -   9:14        0 MAKE_FUNCTION                     0    (foo)
  1:0   -   9:14        3 STORE_NAME                        0    (foo)
  1:0   -   9:14        5 LOAD_NONE
  1:0   -   9:14        6 RETURN_VALUE

Disassembly of foo:
  2:11  -   2:16        0 LOAD_GLOBAL                       0    (range)
  2:17  -   2:19        2 LOAD_BYTE                         10
  2:11  -   2:20        4 CALL_FUNCTION                     1
  2:2   -   9:14        6 GET_ITER
  2:2   -   9:14  >>    7 FOR_ITER                          70   (to 77)
  2:6   -   2:7         9 STORE_FAST                        0    (i)                               generalizes: 7
  3:4   -   9:14       11 NOP
  4:9   -   4:10       12 LOAD_FAST                         0    (i)
  4:6   -   5:16       14 POP_AND_JUMP_IF_FALSE             23   (to 37)                           generalizes: 12
  5:15  -   5:16       18 LOAD_GLOBAL                       1    (a)
  8:6   -   8:11       20 LOAD_GLOBAL                       2    (print)
  8:12  -   8:21       22 LOAD_STRING                       1    ('finally')
  8:6   -   8:22       24 CALL_FUNCTION                     1
  8:6   -   8:22       26 POP_TOP
  9:13  -   9:14       27 LOAD_GLOBAL                       3    (b)
  9:6   -   9:14       29 ROT_TWO
  9:6   -   9:14       30 POP_TOP
  9:6   -   9:14       31 ROT_TWO
  9:6   -   9:14       32 POP_TOP
  9:6   -   9:14       33 RETURN_VALUE
  9:6   -   9:14       34 ROT_TWO
  9:6   -   9:14       35 POP_TOP
  9:6   -   9:14       36 RETURN_VALUE
  6:6   -   6:11  >>   37 LOAD_GLOBAL                       2    (print)
  6:12  -   6:13       39 LOAD_FAST                         0    (i)
  6:6   -   6:14       41 CALL_FUNCTION                     1
  6:6   -   6:14       43 POP_TOP
  6:6   -   6:14       44 JUMP_FORWARD                      19   (to 63)
  6:6   -   6:14       46 PUSH_EXC_INFO                                                           (exc handler 12 - 20; stack: 1 | exc handler 37 - 46; stack: 1)
  8:6   -   8:11       47 LOAD_GLOBAL                       2    (print)
  8:12  -   8:21       49 LOAD_STRING                       1    ('finally')
  8:6   -   8:22       51 CALL_FUNCTION                     1
  8:6   -   8:22       53 POP_TOP
  9:13  -   9:14       54 LOAD_GLOBAL                       3    (b)
  9:6   -   9:14       56 ROT_THREE
  9:6   -   9:14       57 POP_EXCEPT
  9:6   -   9:14       58 POP_TOP
  9:6   -   9:14       59 ROT_TWO
  9:6   -   9:14       60 POP_TOP
  9:6   -   9:14       61 RETURN_VALUE
  9:6   -   9:14       62 END_EXC_HANDLER                                                         (exc handler 47 - 62; stack: 2)
  8:6   -   8:11  >>   63 LOAD_GLOBAL                       2    (print)
  8:12  -   8:21       65 LOAD_STRING                       1    ('finally')
  8:6   -   8:22       67 CALL_FUNCTION                     1
  8:6   -   8:22       69 POP_TOP
  9:13  -   9:14       70 LOAD_GLOBAL                       3    (b)
  9:6   -   9:14       72 ROT_TWO
  9:6   -   9:14       73 POP_TOP
  9:6   -   9:14       74 RETURN_VALUE
  9:6   -   9:14       75 JUMP_BACKWARD                     68   (to 7)
  9:6   -   9:14  >>   77 LOAD_NONE
  9:6   -   9:14       78 RETURN_VALUE
