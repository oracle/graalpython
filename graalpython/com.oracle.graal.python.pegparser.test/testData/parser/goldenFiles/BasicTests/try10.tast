Input:
------
def divide(x, y):
    try:
        result = x / y
    except ZeroDivisionError:
        print("division by zero!")
    else:
        print("result is", result)
    finally:
        print("executing finally clause")

Output:
-------
Module[1:0-9:41]
    FunctionDef[1:0-9:41]
        Name:divide
        ArgumentsTy[1:0-1:0]
            Args:
                ArgTy[1:11-1:12] x
                ArgTy[1:14-1:15] y
        ---- Function body of divide ----
        Try[2:4-9:41]
            Body:
                Assign[3:8-3:22]
                    LHS: Name[3:8-3:14] Value: "result" Store
                    RHS: 
                        BinOp[3:17-3:22]
                            Op: Div
                            LHS: Name[3:17-3:18] Value: "x"
                            RHS: Name[3:21-3:22] Value: "y"
            Except:
                ExceptHandler[4:4-5:34]
                    Type: Name[4:11-4:28] Value: "ZeroDivisionError"
                    Body:
                        Call[5:8-5:34]
                            Target: Name[5:8-5:13] Value: "print"
                            Args:
                                CODEPOINTS[5:14-5:33] Value: "division by zero!"
            Finally:
                Call[9:8-9:41]
                    Target: Name[9:8-9:13] Value: "print"
                    Args:
                        CODEPOINTS[9:14-9:40] Value: "executing finally clause"
            Else:
                Call[7:8-7:34]
                    Target: Name[7:8-7:13] Value: "print"
                    Args:
                        CODEPOINTS[7:14-7:25] Value: "result is"
                        Name[7:27-7:33] Value: "result"
        ---- End of divide function ----