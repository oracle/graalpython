Input:
------
def outer():
    var = None
    def toInternal(obj):
        nonlocal var
        x = 10
    return toInternal

fnc = outer()
c = fnc.__code__

print("free > ", c.co_freevars)
print("cell > ", c.co_cellvars)


Output:
-------
Module[1:0-12:31]
    FunctionDef[1:0-6:21]
        Name:outer
        ArgumentsTy[1:0-1:0]
        ---- Function body of outer ----
        Assign[2:4-2:14]
            LHS: Name[2:4-2:7] Value: "var" Store
            RHS: NONE[2:10-2:14] Value: null
        FunctionDef[3:4-5:14]
            Name:toInternal
            ArgumentsTy[1:0-1:0]
                Args:
                    ArgTy[3:19-3:22] obj
            ---- Function body of toInternal ----
            Nonlocal[4:8-4:20]: var 
            Assign[5:8-5:14]
                LHS: Name[5:8-5:9] Value: "x" Store
                RHS: LONG[5:12-5:14] Value: 10
            ---- End of toInternal function ----
        Return[6:4-6:21] Name[6:11-6:21] Value: "toInternal"
        ---- End of outer function ----
    Assign[8:0-8:13]
        LHS: Name[8:0-8:3] Value: "fnc" Store
        RHS: 
            Call[8:6-8:13]
                Target: Name[8:6-8:11] Value: "outer"
    Assign[9:0-9:16]
        LHS: Name[9:0-9:1] Value: "c" Store
        RHS: 
            Attribute[9:4-9:16] 
                Receiver: Name[9:4-9:7] Value: "fnc"
                Attr: __code__
    Call[11:0-11:31]
        Target: Name[11:0-11:5] Value: "print"
        Args:
            CODEPOINTS[11:6-11:15] Value: "free > "
            Attribute[11:17-11:30] 
                Receiver: Name[11:17-11:18] Value: "c"
                Attr: co_freevars
    Call[12:0-12:31]
        Target: Name[12:0-12:5] Value: "print"
        Args:
            CODEPOINTS[12:6-12:15] Value: "cell > "
            Attribute[12:17-12:30] 
                Receiver: Name[12:17-12:18] Value: "c"
                Attr: co_cellvars